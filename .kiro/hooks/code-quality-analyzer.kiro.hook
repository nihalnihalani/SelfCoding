{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Listen to source code files in the repository. When changes are detected, analyze the modified code for potential improvements, including code smells, design patterns, and best practices. Generate suggestions for improving code quality while maintaining the existing functionality. Focus on readability, maintainability, and performance optimizations.",
  "version": "1",
  "when": {
    "type": "userTriggered",
    "patterns": [
      "backend/**/*.py",
      "frontend/src/**/*.js",
      "frontend/src/**/*.jsx",
      "*.py",
      "*.js",
      "*.jsx"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code files for potential improvements. Look for:\n\n1. **Code Smells**: Identify long methods, duplicate code, large classes, inappropriate intimacy, and other anti-patterns\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check for proper error handling, naming conventions, documentation, and code organization\n4. **Performance**: Identify potential performance bottlenecks and suggest optimizations\n5. **Readability**: Suggest improvements for code clarity and maintainability\n6. **Security**: Look for potential security vulnerabilities or unsafe practices\n\nFor each suggestion, provide:\n- Clear explanation of the issue\n- Specific code examples showing the problem\n- Recommended solution with example implementation\n- Rationale for why the change improves the code\n\nFocus on actionable improvements that maintain existing functionality while enhancing code quality."
  }
}